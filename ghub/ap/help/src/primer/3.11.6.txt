package.cpath = "./?53.dll;./?.dll";

function frmclose()
	os.exit();
end
function on_mousemove()
end
function on_paint()
end

function get_shape(pt1,pt2,color)
	local outer_pts = {
		{color.r,color.g,color.b,1,1,pt1.x,pt1.y,pt1.z};
		{color.r,color.g,color.b,1,1,pt2.x,pt1.y,pt1.z};
		{color.r,color.g,color.b,1,1,pt1.x,pt2.y,pt1.z};
		{color.r,color.g,color.b,1,1,pt2.x,pt2.y,pt1.z};
		{color.r,color.g,color.b,1,1,pt1.x,pt1.y,pt2.z};
		{color.r,color.g,color.b,1,1,pt2.x,pt1.y,pt2.z};
		{color.r,color.g,color.b,1,1,pt1.x,pt2.y,pt2.z};
		{color.r,color.g,color.b,1,1,pt2.x,pt2.y,pt2.z};
	};
	local lines_pts = {
		{0,0,0,1,1,pt1.x,pt1.y,pt1.z};
		{0,0,0,1,1,pt2.x,pt1.y,pt1.z};
		{0,0,0,1,1,pt1.x,pt2.y,pt1.z};
		{0,0,0,1,1,pt2.x,pt2.y,pt1.z};
		{0,0,0,1,1,pt1.x,pt1.y,pt2.z};
		{0,0,0,1,1,pt2.x,pt1.y,pt2.z};
		{0,0,0,1,1,pt1.x,pt2.y,pt2.z};
		{0,0,0,1,1,pt2.x,pt2.y,pt2.z};
	};
	local shape = {
		surfaces = {
			{
				points = lines_pts;
				lines = {{1,2},{1,3},{2,4},{3,4};{5,6},{5,7},{6,8},{7,8};{1,5},{2,6},{3,7},{4,8}};
			};
			{
				points = outer_pts;
				outer = {1,3,4,2};
			};
			{
				points = outer_pts;
				outer = {5,6,8,7};
			};
			{
				points = outer_pts;
				outer = {1,2,6,5};
			};
			{
				points = outer_pts;
				outer = {1,5,7,3};
			};
			{
				points = outer_pts;
				outer = {2,4,8,6};
			};
			{
				points = outer_pts;
				outer = {3,7,8,4};
			};
		};
	};
	return shape;
end

local scene = new_child(frm,"New1");
local objects = {};
function add_object()
	local n = #objects;
	local pt1 = {x=5000*n,y=5000*n,z=5000*n};
	local pt2 = {x=5000*n+3000,y=5000*n+3000,z=5000*n+3000};
	local color = {r=0,g=0.5,b=1};
	local shape = get_shape(pt1,pt2,color);
	local glname,gllist = n+1,makelist(scene,shape);
	objects[n+1] = {pt1=pt1,pt2=pt2,color=color,glname=glname,gllist=gllist};
	scene_onpaint(scene);
end

local gl = require "luaext.gl"
function render_objs()
	for i,v in ipairs(objects) do
		gl.glLoadName(v.glname);
		gl.glCallList(v.gllist);
	end
end

local iup = require"iuplua"
local pt1_lab = iup.label{title="Point1:",size="50x"};
local pt1_x_lab = iup.label{title="X:"};
local pt1_x_txt = iup.text{expand="Horizontal"};
local pt1_y_lab = iup.label{title="Y:"};
local pt1_y_txt = iup.text{expand="Horizontal"};
local pt1_z_lab = iup.label{title="Z:"};
local pt1_z_txt = iup.text{expand="Horizontal"};
local pt2_lab = iup.label{title="Point2:",size="50X"};
local pt2_x_lab = iup.label{title="X:"};
local pt2_x_txt = iup.text{expand="Horizontal"};
local pt2_y_lab = iup.label{title="Y:"};
local pt2_y_txt = iup.text{expand="Horizontal"};
local pt2_z_lab = iup.label{title="Z:"};
local pt2_z_txt = iup.text{expand="Horizontal"};
local color_lab = iup.label{title="Color:",size="50X"};
local color_r_lab = iup.label{title="R:"};
local color_r_txt = iup.text{expand="Horizontal"};
local color_g_lab = iup.label{title="G:"};
local color_g_txt = iup.text{expand="Horizontal"};
local color_b_lab = iup.label{title="B:"};
local color_b_txt = iup.text{expand="Horizontal"};
local ok_btn = iup.button{title="OK",size="100X"};
local cancel_btn = iup.button{title="Cancel",size="100X"};
local dlg = iup.dialog{
	title = "Property";
	size = "500X100";
	margin = "5X5";
	iup.vbox{
		iup.hbox{pt1_lab,pt1_x_lab,pt1_x_txt,pt1_y_lab,pt1_y_txt,pt1_z_lab,pt1_z_txt};
		iup.hbox{pt2_lab,pt2_x_lab,pt2_x_txt,pt2_y_lab,pt2_y_txt,pt2_z_lab,pt2_z_txt};
		iup.hbox{color_lab,color_r_lab,color_r_txt,color_g_lab,color_g_txt,color_b_lab,color_b_txt};
		iup.hbox{iup.fill{},ok_btn,cancel_btn};
	};
}
function init_dlg()
	pt1_x_txt.value = x1;
	pt1_y_txt.value = y1;
	pt1_z_txt.value = z1;
	pt2_x_txt.value = x2;
	pt2_y_txt.value = y2;
	pt2_z_txt.value = z2;
	color_r_txt.value = r;
	color_g_txt.value = g;
	color_b_txt.value = b;
end
function ok_btn:action()
	x1 = pt1_x_txt.value;
	y1 = pt1_y_txt.value;
	z1 = pt1_z_txt.value;
	x2 = pt2_x_txt.value;
	y2 = pt2_y_txt.value;
	z2 = pt2_z_txt.value;
	r = color_r_txt.value;
	g = color_g_txt.value;
	b = color_b_txt.value;
	k,v = 1,makelist(scene,get_shape());
	scene_onpaint(scene);
	dlg:hide();
end
function cancel_btn:action()
	dlg:hide();
end
function show_dlg()
	init_dlg();
	dlg:popup();
end
function on_lbuttondblclk(scene,flags,x,y)
	show_dlg();
end

local ID_PROPERTY = ID+1;
local ID_ADD = ID+2;
add_menu(
	frm,
	{	
		name = "Cube",
		nposition = 2,
		items = 
		{	
			{id=ID_ADD,name="Add"},
			{id=ID_PROPERTY,name="Property"},
		},
	}
);
crt_toolbar(frm,
	{
		bmpname = "toolbar1.bmp",
		nbmps = 3, 
		dxButton = 0, 
		dyButton = 0,
		dxBitmap = 16,
		dyBitmap = 16,
		buttons = {
			{iBitmap=2,idCommand=ID_ADD,iString="Add",fsState=TBSTATE_ENABLED,fsStyle=BTNS_BUTTON,},
			{iBitmap=5,idCommand=ID_PROPERTY,iString="Property",fsState=TBSTATE_ENABLED,fsStyle=BTNS_BUTTON,},
		},
	}
);
local commands = {};
commands[ID_PROPERTY] = function(scene)
	show_dlg();
end
commands[ID_ADD] = function(scene)
	add_object();
end
function on_command(id,scene)
	if type(commands[id])=="function" then
		commands[id](scene);
	end
end
